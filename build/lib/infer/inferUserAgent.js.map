{"version":3,"sources":["infer/inferUserAgent.js"],"names":["getUserAgentString","ELECTRON_VERSIONS_URL","DEFAULT_CHROME_VERSION","getChromeVersionForElectronVersion","electronVersion","url","axios","get","timeout","then","response","status","Error","data","electronVersionToChromeVersion","_","zipObject","map","d","version","chrome","chromeVersion","platform","userAgent","inferUserAgent","catch","log","warn"],"mappings":";;;;;QAgCgBA,kB,GAAAA,kB;;AAhChB;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,wBAAwB,gDAA9B;AACA,IAAMC,yBAAyB,eAA/B;;AAEA,SAASC,kCAAT,CACEC,eADF,EAGE;AAAA,MADAC,GACA,uEADMJ,qBACN;;AACA,SAAOK,gBAAMC,GAAN,CAAUF,GAAV,EAAe,EAAEG,SAAS,IAAX,EAAf,EAAkCC,IAAlC,CAAuC,UAACC,QAAD,EAAc;AAC1D,QAAIA,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAM,IAAIC,KAAJ,CAAW,4BAA2BF,SAASC,MAAO,EAAtD,CAAN;AACD;;AAHyD,QAKlDE,IALkD,GAKzCH,QALyC,CAKlDG,IALkD;;AAM1D,QAAMC,iCAAiCC,iBAAEC,SAAF,CACrCH,KAAKI,GAAL,CAAS,UAACC,CAAD;AAAA,aAAOA,EAAEC,OAAT;AAAA,KAAT,CADqC,EAErCN,KAAKI,GAAL,CAAS,UAACC,CAAD;AAAA,aAAOA,EAAEE,MAAT;AAAA,KAAT,CAFqC,CAAvC;;AAKA,QAAI,EAAEhB,mBAAmBU,8BAArB,CAAJ,EAA0D;AACxD,YAAM,IAAIF,KAAJ,CACH,qBAAoBR,eAAgB,wCADjC,CAAN;AAGD;;AAED,WAAOU,+BAA+BV,eAA/B,CAAP;AACD,GAlBM,CAAP;AAmBD;;AAEM,SAASJ,kBAAT,CAA4BqB,aAA5B,EAA2CC,QAA3C,EAAqD;AAC1D,MAAIC,kBAAJ;AACA,UAAQD,QAAR;AACE,SAAK,QAAL;AACA,SAAK,KAAL;AACEC,kBAAa,iGAAgGF,aAAc,gBAA3H;AACA;AACF,SAAK,OAAL;AACEE,kBAAa,2FAA0FF,aAAc,gBAArH;AACA;AACF,SAAK,OAAL;AACEE,kBAAa,iFAAgFF,aAAc,gBAA3G;AACA;AACF;AACE,YAAM,IAAIT,KAAJ,CACJ,0DADI,CAAN;AAZJ;AAgBA,SAAOW,SAAP;AACD;;AAED,SAASC,cAAT,CACEpB,eADF,EAEEkB,QAFF,EAIE;AAAA,MADAjB,GACA,uEADMJ,qBACN;;AACA,SAAOE,mCAAmCC,eAAnC,EAAoDC,GAApD,EACJI,IADI,CACC,UAACY,aAAD;AAAA,WAAmBrB,mBAAmBqB,aAAnB,EAAkCC,QAAlC,CAAnB;AAAA,GADD,EAEJG,KAFI,CAEE,YAAM;AACXC,uBAAIC,IAAJ,CACG,wDAAuDzB,sBAAuB,EADjF;AAGA,WAAOF,mBAAmBE,sBAAnB,EAA2CoB,QAA3C,CAAP;AACD,GAPI,CAAP;AAQD;;kBAEcE,c","file":"inferUserAgent.js","sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport log from 'loglevel';\n\nconst ELECTRON_VERSIONS_URL = 'https://atom.io/download/atom-shell/index.json';\nconst DEFAULT_CHROME_VERSION = '58.0.3029.110';\n\nfunction getChromeVersionForElectronVersion(\n  electronVersion,\n  url = ELECTRON_VERSIONS_URL,\n) {\n  return axios.get(url, { timeout: 5000 }).then((response) => {\n    if (response.status !== 200) {\n      throw new Error(`Bad request: Status code ${response.status}`);\n    }\n\n    const { data } = response;\n    const electronVersionToChromeVersion = _.zipObject(\n      data.map((d) => d.version),\n      data.map((d) => d.chrome),\n    );\n\n    if (!(electronVersion in electronVersionToChromeVersion)) {\n      throw new Error(\n        `Electron version '${electronVersion}' not found in retrieved version list!`,\n      );\n    }\n\n    return electronVersionToChromeVersion[electronVersion];\n  });\n}\n\nexport function getUserAgentString(chromeVersion, platform) {\n  let userAgent;\n  switch (platform) {\n    case 'darwin':\n    case 'mas':\n      userAgent = `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${chromeVersion} Safari/537.36`;\n      break;\n    case 'win32':\n      userAgent = `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${chromeVersion} Safari/537.36`;\n      break;\n    case 'linux':\n      userAgent = `Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${chromeVersion} Safari/537.36`;\n      break;\n    default:\n      throw new Error(\n        'Error invalid platform specified to getUserAgentString()',\n      );\n  }\n  return userAgent;\n}\n\nfunction inferUserAgent(\n  electronVersion,\n  platform,\n  url = ELECTRON_VERSIONS_URL,\n) {\n  return getChromeVersionForElectronVersion(electronVersion, url)\n    .then((chromeVersion) => getUserAgentString(chromeVersion, platform))\n    .catch(() => {\n      log.warn(\n        `Unable to infer chrome version for user agent, using ${DEFAULT_CHROME_VERSION}`,\n      );\n      return getUserAgentString(DEFAULT_CHROME_VERSION, platform);\n    });\n}\n\nexport default inferUserAgent;\n"]}
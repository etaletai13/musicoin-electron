{"version":3,"sources":["options/optionsMain.test.js"],"names":["jest","mock","mockedAsyncConfig","some","asyncConfig","mockImplementation","Promise","resolve","test","params","targetUrl","result","expect","toHaveBeenCalledWith","objectContaining","toEqual"],"mappings":";;AAAA;;;;AACA;;;;;;;;AAEAA,KAAKC,IAAL,CAAU,eAAV;AACA,IAAMC,oBAAoB,EAAEC,MAAM,SAAR,EAA1B;AACAC,sBAAYC,kBAAZ,CAA+B;AAAA,SAAMC,QAAQC,OAAR,CAAgBL,iBAAhB,CAAN;AAAA,CAA/B;;AAEAM,KAAK,iCAAL,0DAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCC,gBADgC,GACvB;AACbC,uBAAW;AADE,WADuB;AAAA;AAAA,iBAIjB,2BAAYD,MAAZ,CAJiB;;AAAA;AAIhCE,gBAJgC;;AAKtCC,iBAAOR,qBAAP,EAAoBS,oBAApB,CAAyCD,OAAOE,gBAAP,CAAwBL,MAAxB,CAAzC;AACAG,iBAAOD,MAAP,EAAeI,OAAf,CAAuBb,iBAAvB;;AANsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxC;;AASA","file":"optionsMain.test.js","sourcesContent":["import optionsMain from './optionsMain';\nimport asyncConfig from './asyncConfig';\n\njest.mock('./asyncConfig');\nconst mockedAsyncConfig = { some: 'options' };\nasyncConfig.mockImplementation(() => Promise.resolve(mockedAsyncConfig));\n\ntest('it should call the async config', async () => {\n  const params = {\n    targetUrl: 'http://example.com',\n  };\n  const result = await optionsMain(params);\n  expect(asyncConfig).toHaveBeenCalledWith(expect.objectContaining(params));\n  expect(result).toEqual(mockedAsyncConfig);\n});\n\n// TODO add more tests\n"]}
{"version":3,"sources":["options/fields/userAgent.test.js"],"names":["jest","mock","test","expect","inferUserAgent","toHaveBeenCalledTimes","params","userAgent","resolves","toBe","electronVersion","platform","toHaveBeenCalledWith"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,KAAKC,IAAL,CAAU,8BAAV;;AAEAC,KAAK,sCAAL,0DAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CC,iBAAOC,qBAAP,EAAuBC,qBAAvB,CAA6C,CAA7C;;AAEMC,gBAHqC,GAG5B,EAAEC,WAAW,kBAAb,EAH4B;AAAA;AAAA,iBAIrCJ,OAAO,yBAAUG,MAAV,CAAP,EAA0BE,QAA1B,CAAmCC,IAAnC,CAAwCH,OAAOC,SAA/C,CAJqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C;;AAOAL,KAAK,kCAAL,0DAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCI,gBADiC,GACxB,EAAEI,iBAAiB,KAAnB,EAA0BC,UAAU,KAApC,EADwB;AAAA;AAAA,iBAEjC,yBAAUL,MAAV,CAFiC;;AAAA;AAGvCH,iBAAOC,qBAAP,EAAuBQ,oBAAvB,CACEN,OAAOI,eADT,EAEEJ,OAAOK,QAFT;;AAHuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzC","file":"userAgent.test.js","sourcesContent":["import userAgent from './userAgent';\nimport { inferUserAgent } from './../../infer';\n\njest.mock('./../../infer/inferUserAgent');\n\ntest('when a userAgent parameter is passed', async () => {\n  expect(inferUserAgent).toHaveBeenCalledTimes(0);\n\n  const params = { userAgent: 'valid user agent' };\n  await expect(userAgent(params)).resolves.toBe(params.userAgent);\n});\n\ntest('no userAgent parameter is passed', async () => {\n  const params = { electronVersion: '123', platform: 'mac' };\n  await userAgent(params);\n  expect(inferUserAgent).toHaveBeenCalledWith(\n    params.electronVersion,\n    params.platform,\n  );\n});\n"]}
{"version":3,"sources":["options/asyncConfig.js"],"names":["options","tasks","Promise","all","then","fieldResults","inferredOptions","resultArrayToObject","reduce","accumulator","value","Object","assign","oldOptions","newOptions"],"mappings":";;;;;;kBAgBe,UAASA,OAAT,EAAkB;AAC/B,MAAMC,QAAQ,sBAAOD,OAAP,CAAd;AACA,SAAOE,QAAQC,GAAR,CAAYF,KAAZ,EAAmBG,IAAnB,CAAwB,UAACC,YAAD;AAAA,WAC7BC,gBAAgBN,OAAhB,EAAyBK,YAAzB,CAD6B;AAAA,GAAxB,CAAP;AAGD,C;;AArBD;;;;;;AAEA,SAASE,mBAAT,CAA6BF,YAA7B,EAA2C;AACzC,SAAOA,aAAaG,MAAb,CACL,UAACC,WAAD,EAAcC,KAAd;AAAA,WAAwBC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,WAAlB,EAA+BC,KAA/B,CAAxB;AAAA,GADK,EAEL,EAFK,CAAP;AAID;;AAED,SAASJ,eAAT,CAAyBO,UAAzB,EAAqCR,YAArC,EAAmD;AACjD,MAAMS,aAAaP,oBAAoBF,YAApB,CAAnB;AACA,SAAOM,OAAOC,MAAP,CAAc,EAAd,EAAkBC,UAAlB,EAA8BC,UAA9B,CAAP;AACD;;AAED;AACA","file":"asyncConfig.js","sourcesContent":["import fields from './fields';\n\nfunction resultArrayToObject(fieldResults) {\n  return fieldResults.reduce(\n    (accumulator, value) => Object.assign({}, accumulator, value),\n    {},\n  );\n}\n\nfunction inferredOptions(oldOptions, fieldResults) {\n  const newOptions = resultArrayToObject(fieldResults);\n  return Object.assign({}, oldOptions, newOptions);\n}\n\n// Takes the options object and infers new values\n// which may need async work\nexport default function(options) {\n  const tasks = fields(options);\n  return Promise.all(tasks).then((fieldResults) =>\n    inferredOptions(options, fieldResults),\n  );\n}\n"]}